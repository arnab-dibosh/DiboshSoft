#include <bits/stdc++.h>
int sieve(int limit);
int permutation(int ind);
bool isvalid(int i, int val);
using namespace std;

int vis[20], per[20], primeList[35], n=0;

int main()
{
    int t=0;
    sieve(32);
    per[1]=1;
    while(scanf ("%d", &n) != EOF)
    {
        for(int i=0; i<=20; i++) vis[i]=0;
        printf("Case %d:\n", ++t);
        permutation(2);
        cout<<endl;
    }

    return 0;
}

int permutation(int ind)
{
    if(ind>n)
    {
        for(int i=1; i<=n; i++)
            cout<<per[i]<<" ";
        cout<<endl;
    }

    for(int i=2; i<=n; i++)
    {
        if(vis[i]==0 && isvalid(ind, i))
        {
            vis[i]=1;
            per[ind]=i;
            permutation(ind+1);
            vis[i]=0;
        }
    }
    return 0;
}

bool isvalid(int i, int val)
{
    int num=0;
     if(i<n)
     {
        num=val+per[i-1];
        if(primeList[num]==0) return true;
     }
    else
    {
        if(primeList[val+per[i-1]]==0 && primeList[val+1]==0) return true;
    }
    return false;
}

int sieve(int limit)
{
    for(int i=2; i*i<limit; i++)
    {
        if(primeList[i]==0)
        {
            for(int j=i*2; j<=limit; j+=i)
                primeList[j]=1;
        }
    }
    return 0;
}
