#include<bits/stdc++.h>
using namespace std;

int coins[25];
long long dp[25][10010];

long long coinChange(int i, int lAmount)
{
    long long with=0, without=0, ans=0;
    if(i==0)
    {
        if(lAmount==0) return 1;
        else return 0;
    }
    if(lAmount==0) return 1;

    if(dp[i][lAmount]!=-1) return dp[i][lAmount];

    if(coins[i]>lAmount)
       ans= coinChange(i-1, lAmount);
    else
    {
        with=coinChange(i, lAmount-coins[i]);
        without=coinChange(i-1, lAmount);
        ans=with + without;
    }

    return dp[i][lAmount]=ans;
}

int main()
{
    int n;
    memset(dp, -1, sizeof(dp));

    for(int i=1; i<=21;i++)
        coins[i]=pow(i, 3);

    while(cin>>n)
    {
        int i=0;
        for(i=21; i>0; i--)
            if(coins[i]<=n) break;

        long long res=coinChange(i, n);
        cout<<res<<endl;
    }
    return 0;
}
